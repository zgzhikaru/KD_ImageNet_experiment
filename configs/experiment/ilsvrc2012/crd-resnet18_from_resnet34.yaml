datasets:
  &imagenet_train ilsvrc2012/train: !import_call
    _name: &dataset_name 'ilsvrc2012'
    _root: &root_dir !join ['~/datasets/', *dataset_name]
    key: 'torchvision.datasets.ImageFolder'
    init:
      kwargs:
        root: !join [*root_dir, '/train']
        transform: !import_call
          key: 'torchvision.transforms.Compose'
          init:
            kwargs:
              transforms:
                - !import_call
                  key: 'torchvision.transforms.RandomResizedCrop'
                  init:
                    kwargs:
                      size: &input_size [224, 224]
                - !import_call
                  key: 'torchvision.transforms.RandomHorizontalFlip'
                  init:
                    kwargs:
                      p: 0.5
                - !import_call
                  key: 'torchvision.transforms.ToTensor'
                  init:
                - !import_call
                  key: 'torchvision.transforms.Normalize'
                  init:
                    kwargs: &normalize_kwargs
                      mean: [0.485, 0.456, 0.406]
                      std: [0.229, 0.224, 0.225]
  &imagenet_val ilsvrc2012/val: !import_call
    key: 'torchvision.datasets.ImageFolder'
    init:
      kwargs:
        root: !join [*root_dir, '/val']
        transform: !import_call
          key: 'torchvision.transforms.Compose'
          init:
            kwargs:
              transforms:
                - !import_call
                  key: 'torchvision.transforms.Resize'
                  init:
                    kwargs:
                      size: 256
                - !import_call
                  key: 'torchvision.transforms.CenterCrop'
                  init:
                    kwargs:
                      size: *input_size
                - !import_call
                  key: 'torchvision.transforms.ToTensor'
                  init:
                - !import_call
                  key: 'torchvision.transforms.Normalize'
                  init:
                    kwargs: *normalize_kwargs

models:
  teacher_model:
    key: &teacher_model_key 'resnet34'
    _weights: &teacher_weights !import_get
      key: 'torchvision.models.resnet.ResNet34_Weights'
    kwargs:
      num_classes: 1000
      weights: !getattr [*teacher_weights, 'IMAGENET1K_V1']
    src_ckpt:
  student_model:
    key: &student_model_key 'resnet18'
    kwargs:
      num_classes: 1000
    _experiment: &student_experiment !join [*dataset_name, '-', *student_model_key, '_from_', *teacher_model_key]
    src_ckpt:
    dst_ckpt: !join ['./resource/ckpt/ilsvrc2012/crd/', *student_experiment, '.pt']

train:
  log_freq: 1000
  num_epochs: 100
  train_data_loader:
    dataset_id: *imagenet_train
    dataset_wrapper:
      key: 'CRDDatasetWrapper'
      kwargs:
        num_negative_samples: &num_negative_samples 16384
        mode: 'exact'
        ratio: 1.0
    sampler:
      class_or_func: !import_get
        key: 'torch.utils.data.RandomSampler'
      kwargs:
    kwargs:
      batch_size: 85
      num_workers: 16
      pin_memory: True
      drop_last: False
    cache_output:
  val_data_loader:
    dataset_id: *imagenet_val
    sampler: &val_sampler
      class_or_func: !import_get
        key: 'torch.utils.data.SequentialSampler'
      kwargs:
    kwargs:
      batch_size: 128
      num_workers: 16
      pin_memory: True
      drop_last: False
  teacher:
    forward_proc: 'forward_batch_supp_dict'
    sequential: []
    auxiliary_model_wrapper:
      key: 'Linear4CRD'
      kwargs:
        input_module_path: 'model.avgpool'
        linear_kwargs:
          in_features: 512
          out_features: 128
          bias: True
        power: 2
    forward_hook:
      input: []
      output: ['model.avgpool', 'normalizer']
    wrapper:
    requires_grad: True
    frozen_modules: ['model']
  student:
    forward_proc: 'forward_batch_supp_dict'
    adaptations:
    sequential: []
    auxiliary_model_wrapper:
      key: 'Linear4CRD'
      kwargs:
        input_module_path: 'model.avgpool'
        linear_kwargs:
          in_features: 512
          out_features: &feature_dim 128
          bias: True
        power: 2
    forward_hook:
      input: ['empty']
      output: ['model.avgpool', 'normalizer']
    wrapper:
    requires_grad: True
    frozen_modules: []
  optimizer:
    key: 'SGD'
    kwargs:
      lr: 0.1
      momentum: 0.9
      weight_decay: 0.0001
  scheduler:
    key: 'MultiStepLR'
    kwargs:
      milestones: [30, 60, 90]
      gamma: 0.1
  criterion:
    key: 'WeightedSumLoss'
    kwargs:
      sub_terms:
        ce:
          criterion:
            key: 'CrossEntropyLoss'
            kwargs:
              reduction: 'mean'
          criterion_wrapper:
            key: 'SimpleLossWrapper'
            kwargs:
              input:
                is_from_teacher: False
                module_path: '.'
                io: 'output'
              target:
                uses_label: True
          weight: 1.0
        crd:
          criterion:
            key: 'CRDLoss'
            kwargs:
              teacher_norm_module_path: 'normalizer'
              student_norm_module_path: 'normalizer'
              student_empty_module_path: 'empty'
              input_size: *feature_dim
              output_size: &num_samples 1281167
              num_negative_samples: *num_negative_samples
              num_samples: *num_samples
              temperature: 0.07
              momentum: 0.5
              eps: 0.0000001
          weight: 0.8

test:
  test_data_loader:
    dataset_id: *imagenet_val
    sampler: *val_sampler
    kwargs:
      batch_size: 1
      num_workers: 16
      pin_memory: True
      drop_last: False
