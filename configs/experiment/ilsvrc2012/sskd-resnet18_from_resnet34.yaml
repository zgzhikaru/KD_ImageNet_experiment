datasets:
  &imagenet_train ilsvrc2012/train: !import_call
    _name: &dataset_name 'ilsvrc2012'
    _root: &root_dir !join ['~/datasets/', *dataset_name]
    key: 'torchvision.datasets.ImageFolder'
    init:
      kwargs:
        root: !join [*root_dir, '/train']
        transform: !import_call
          key: 'torchvision.transforms.Compose'
          init:
            kwargs:
              transforms:
                - !import_call
                  key: 'torchvision.transforms.RandomResizedCrop'
                  init:
                    kwargs:
                      size: &input_size [224, 224]
                - !import_call
                  key: 'torchvision.transforms.RandomHorizontalFlip'
                  init:
                    kwargs:
                      p: 0.5
                - !import_call
                  key: 'torchvision.transforms.ToTensor'
                  init:
                - !import_call
                  key: 'torchvision.transforms.Normalize'
                  init:
                    kwargs: &normalize_kwargs
                      mean: [0.485, 0.456, 0.406]
                      std: [0.229, 0.224, 0.225]
  &imagenet_val ilsvrc2012/val: !import_call
    key: 'torchvision.datasets.ImageFolder'
    init:
      kwargs:
        root: !join [*root_dir, '/val']
        transform: !import_call
          key: 'torchvision.transforms.Compose'
          init:
            kwargs:
              transforms:
                - !import_call
                  key: 'torchvision.transforms.Resize'
                  init:
                    kwargs:
                      size: 256
                - !import_call
                  key: 'torchvision.transforms.CenterCrop'
                  init:
                    kwargs:
                      size: *input_size
                - !import_call
                  key: 'torchvision.transforms.ToTensor'
                  init:
                - !import_call
                  key: 'torchvision.transforms.Normalize'
                  init:
                    kwargs: *normalize_kwargs

models:
  teacher_model:
    key: &teacher_model_key 'resnet34'
    _weights: &teacher_weights !import_get
      key: 'torchvision.models.resnet.ResNet34_Weights'
    kwargs:
      num_classes: 1000
      weights: !getattr [*teacher_weights, 'IMAGENET1K_V1']
    src_ckpt:
  student_model:
    key: &student_model_key 'resnet18'
    kwargs:
      num_classes: 1000
    _experiment: &student_experiment !join [*dataset_name, '-', *student_model_key, '_from_', *teacher_model_key]
    src_ckpt:
    dst_ckpt: !join ['./resource/ckpt/ilsvrc2012/sskd/', *student_experiment, '.pt']

train:
  log_freq: 1000
  stage1:
    num_epochs: 30
    train_data_loader:
      dataset_id: *imagenet_train
      dataset_wrapper:
        key: 'SSKDDatasetWrapper'
        kwargs:
      sampler:
        class_or_func: !import_get
          key: 'torch.utils.data.RandomSampler'
        kwargs:
      kwargs:
        batch_size: 85
        num_workers: 16
        pin_memory: True
        drop_last: False
      cache_output:
    val_data_loader:
      dataset_id: *imagenet_val
      sampler: &val_sampler
        class_or_func: !import_get
          key: 'torch.utils.data.SequentialSampler'
        kwargs:
      kwargs:
        batch_size: 128
        num_workers: 16
        pin_memory: True
        drop_last: False
    teacher:
      forward_proc: 'forward_batch4sskd'
      sequential: []
      auxiliary_model_wrapper:
        key: 'SSWrapper4SSKD'
        kwargs:
          input_module: &teacher4sskd_in_module
            path: 'model.avgpool'
            io: 'output'
          feat_dim: &teacher4sskd_feat_dim 512
          freezes_ss_module: False
          ss_module_ckpt: &teacher4sskd_ckpt !join ['./resource/ckpt/ilsvrc2012/sskd/', *student_experiment, '_teacher_ss_module.pt']
      forward_hook:
        input: []
        output: ['model.avgpool', 'ss_module']
      wrapper:
      requires_grad: True
      frozen_modules: ['model']
    student:
      forward_proc: 'forward_batch_only'
      adaptations:
      auxiliary_model_wrapper:
        key: 'EmptyModule'
        kwargs:
      sequential: []
      forward_hook:
        input: []
        output: []
      wrapper:
      requires_grad: False
    optimizer:
      key: 'SGD'
      kwargs:
        lr: 0.1
        momentum: 0.9
        weight_decay: 0.0005
    scheduler:
      key: 'MultiStepLR'
      kwargs:
        milestones: [10, 20]
        gamma: 0.1
    criterion:
      key: 'WeightedSumLoss'
      kwargs:
        sub_terms:
          aux_task:
            criterion:
              key: 'AuxSSKDLoss'
              kwargs:
                module_path: 'ss_module'
                module_io: 'output'
                reduction: 'mean'
            weight: 1.0
  stage2:
    num_epochs: 100
    teacher:
      forward_proc: 'forward_batch4sskd'
      sequential: []
      auxiliary_model_wrapper:
        key: 'SSWrapper4SSKD'
        kwargs:
          input_module: *teacher4sskd_in_module
          feat_dim: *teacher4sskd_feat_dim
          freezes_ss_module: True
          ss_module_ckpt: *teacher4sskd_ckpt
      forward_hook:
        input: []
        output: ['model.avgpool', 'model.fc', 'ss_module']
      wrapper:
      requires_grad: False
    student:
      forward_proc: 'forward_batch4sskd'
      adaptations:
      sequential: []
      auxiliary_model_wrapper:
        key: 'SSWrapper4SSKD'
        kwargs:
          input_module:
            path: 'model.avgpool'
            io: 'output'
          feat_dim: 512
          freezes_ss_module: False
          ss_module_ckpt: !join ['./resource/ckpt/ilsvrc2012/sskd/', *student_experiment, '_student_ss_module.pt']
      forward_hook:
        input: []
        output: ['model.avgpool', 'model.fc', 'ss_module']
      wrapper:
      requires_grad: True
      frozen_modules: []
    optimizer:
      key: 'SGD'
      kwargs:
        lr: 0.1
        momentum: 0.9
        weight_decay: 0.0005
    scheduler:
      key: 'MultiStepLR'
      kwargs:
        milestones: [30, 60, 90]
        gamma: 0.1
    criterion:
      key: 'WeightedSumLoss'
      kwargs:
        sub_terms:
          sskd:
            criterion:
              key: 'SSKDLoss'
              kwargs:
                student_linear_module_path: 'model.fc'
                teacher_linear_module_path: 'model.fc'
                student_ss_module_path: 'ss_module'
                teacher_ss_module_path: 'ss_module'
                kl_temp: 4.0
                ss_temp: 0.5
                tf_temp: 4.0
                ss_ratio: 0.75
                tf_ratio: 1.0
                loss_weights: [1.0, 0.9, 10.0, 2.7]
                reduction: 'batchmean'
            weight: 1.0

test:
  test_data_loader:
    dataset_id: *imagenet_val
    sampler: *val_sampler
    kwargs:
      batch_size: 1
      num_workers: 16
      pin_memory: True
      drop_last: False
